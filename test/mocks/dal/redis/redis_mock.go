// Code generated by MockGen. DO NOT EDIT.
// Source: dal/redis/redis.go

// Package mock_redis is a generated GoMock package.
package redis

import (
	//. "github.com/sebastianreh/mutants-detector/settings"
	"github.com/go-redis/redis"
	"github.com/golang/mock/gomock"
	"reflect"
)

// MockIRedisDatabase is a mock of IRedisDatabase interface
type MockIRedisDatabase struct {
	ctrl     *gomock.Controller
	recorder *MockIRedisDatabaseMockRecorder
}

// MockIRedisDatabaseMockRecorder is the mock recorder for MockIRedisDatabase
type MockIRedisDatabaseMockRecorder struct {
	mock *MockIRedisDatabase
}

// NewMockIRedisDatabase creates a new mock instance
func NewMockIRedisDatabase(ctrl *gomock.Controller) *MockIRedisDatabase {
	mock := &MockIRedisDatabase{ctrl: ctrl}
	mock.recorder = &MockIRedisDatabaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIRedisDatabase) EXPECT() *MockIRedisDatabaseMockRecorder {
	return m.recorder
}

// RedisClient mocks base method
func (m *MockIRedisDatabase) RedisClient() *redis.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RedisClient")
	ret0, _ := ret[0].(*redis.Client)
	return ret0
}

// RedisClient indicates an expected call of RedisClient
func (mr *MockIRedisDatabaseMockRecorder) RedisClient() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RedisClient", reflect.TypeOf((*MockIRedisDatabase)(nil).RedisClient))
}
