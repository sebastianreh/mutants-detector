// Code generated by MockGen. DO NOT EDIT.
// Source: repositories/mutants_cache.go

// Package mock_repositories is a generated GoMock package.
package mock_repositories

import (
	models "ExamenMeLiMutante/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIMutantCache is a mock of IMutantCache interface
type MockIMutantCache struct {
	ctrl     *gomock.Controller
	recorder *MockIMutantCacheMockRecorder
}

// MockIMutantCacheMockRecorder is the mock recorder for MockIMutantCache
type MockIMutantCacheMockRecorder struct {
	mock *MockIMutantCache
}

// NewMockIMutantCache creates a new mock instance
func NewMockIMutantCache(ctrl *gomock.Controller) *MockIMutantCache {
	mock := &MockIMutantCache{ctrl: ctrl}
	mock.recorder = &MockIMutantCacheMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIMutantCache) EXPECT() *MockIMutantCacheMockRecorder {
	return m.recorder
}

// SaveStatsInCache mocks base method
func (m *MockIMutantCache) SaveStatsInCache(stats *models.MutantsStats) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SaveStatsInCache", stats)
}

// SaveStatsInCache indicates an expected call of SaveStatsInCache
func (mr *MockIMutantCacheMockRecorder) SaveStatsInCache(stats interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveStatsInCache", reflect.TypeOf((*MockIMutantCache)(nil).SaveStatsInCache), stats)
}

// GetStatsFromCache mocks base method
func (m *MockIMutantCache) GetStatsFromCache() *models.MutantsStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStatsFromCache")
	ret0, _ := ret[0].(*models.MutantsStats)
	return ret0
}

// GetStatsFromCache indicates an expected call of GetStatsFromCache
func (mr *MockIMutantCacheMockRecorder) GetStatsFromCache() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStatsFromCache", reflect.TypeOf((*MockIMutantCache)(nil).GetStatsFromCache))
}
